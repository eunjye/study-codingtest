function solution(numbers) {
  numbers.sort((a,b)=>{
    /**
     * 첫번째 시도 : 소수화 한 값을 비교하려고 했음
     * 안된 이유 : 뒷자리에 0을 포함한 수는 제대로 비교되지 않음
     * 근본적으로, 두 수만을 비교하는 건 의미 없었음
     */
      // if (b >= 1) {
      //     b = b / Math.pow(10, Math.floor(Math.log10(b)) + 1); // 소수화
      // }

      /**
       * 두번째 시도 : string으로 변환한 값을 서로 비교
       * string 간 비교는 숫자 비교와 달리, 자릿수가 크더라도 각 자리에 대한 수의 아스키값이 크면 크다고 판단함
       * 부족했던 점 : 두 수만을 비교해서, 3, 34 와 같은 케이스를 잡지 못했음
       * 여기서 두 string을 합쳐서 각 수 중 뭐가 더 큰지를 비교하는게 관건이었음
       */
      a = ''+a;
      b = ''+b;
      return (b+a) - (a+b);
  })
  // 테스트케이스 실패 : 모든 수가 0일때는 '0000'.. 이 아니라 '0'으로 리턴
  return numbers[0]===0 ? '0' : numbers.join('');
}